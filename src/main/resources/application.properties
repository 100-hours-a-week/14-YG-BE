spring.application.name=moongsan-backend

spring.config.import=optional:file:./config/application-secrets.yml

spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true
spring.flyway.encoding=UTF-8

jwt.secret=your-very-secure-secret-key-must-be-long-enough
jwt.access-token-expire-ms=3600000
jwt.refresh-token-expire-ms=1209600000

spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=none

spring.h2.console.enabled=true

spring.web.resources.static-locations=file:./uploads/
spring.web.resources.cache.period=3600

file.upload-dir=uploads/images
file.public-base-url=https://cdn.example.com/uploads

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=50MB

server.error.include-message=always
server.error.include-binding-errors=always

logging.level.com.moogsan.moongsan_backend.global.security.jwt=DEBUG
logging.level.com.moogsan.moongsan_backend.domain=DEBUG
logging.level.com.moogsan.moongsan_backend.domain.user.service=DEBUG
logging.level.org.springframework.security=DEBUG

server.tomcat.connection-timeout=120s
spring.mvc.async.request-timeout=120s

spring.datasource.hikari.maximum-pool-size=250
spring.datasource.hikari.leak-detection-threshold=5000

server.tomcat.threads.max=300
server.tomcat.threads.min-spare=30

app.oauth.kakao-client-id=${OAUTH_KAKAO_CLIENT_ID}
app.oauth.kakao-redirect-uri=${OAUTH_KAKAO_REDIRECT_URI}
app.oauth.kakao-complete-redirect=${OAUTH_KAKAO_COMPLETE_REDIRECT}

management.endpoints.web.exposure.include=*

spring.data.mongodb.uri=${MONGO_DB_URI}
spring.data.mongodb.database=${MONGO_DB}

spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}

spring.kafka.producer.acks=all
spring.kafka.producer.linger-ms= 5
spring.kafka.producer.batch-size= 16384
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.enable.idempotence=true

spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.properties.spring.json.trusted.packages=com.moogsan.moongsan_backend.*
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.properties.allow.auto.create.topics=false
spring.kafka.producer.properties.spring.json.add.type.headers=true
spring.kafka.admin.auto-create=false

spring.kafka.consumer.properties.spring.json.trusted-packages=com.moogsan.moongsan_backend.domain.notification.dto
